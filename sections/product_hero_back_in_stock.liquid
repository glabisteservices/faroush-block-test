<style>
  .product-header_layout {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-column-gap: 3rem;
    grid-row-gap: 2rem;
    align-items: start;
    min-height: 90vh;
    padding: 0 20px 2rem 20px;
  }
  
  @media screen and (max-width: 768px) {
    .product-header_layout {
      grid-template-columns: 1fr;
      grid-column-gap: 0;
      min-height: auto;
      padding: 0 10px;
      scroll-behavior: auto;
      align-items: start;
    }
  }
  
  /* Gallery Styles */
  .product-gallery-container {
    position: relative;
    width: 100%;
    height: calc(90vh - 4rem);
    display: flex;
    flex-direction: column;
  }
  
  @media screen and (max-width: 768px) {
    .product-gallery-container {
      height: auto;
      min-height: 300px;
    }
  }
  
  .product-gallery-main {
    position: relative;
    width: 100%;
    flex: 1;
    margin-bottom: 1rem;
    overflow: hidden;
    border-radius: 20px;
    background-color: transparent;
    display: flex;
  }
  
  .gallery-slide {
    width: auto;
    height: 100%;
    flex-shrink: 0;
    border-radius: 20px;
    overflow: hidden;
    background-color: transparent;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  
  @media screen and (max-width: 768px) {
    .gallery-slide {
      width: 100%;
      min-height: 300px;
    }
  }
  
  .gallery-image {
    width: auto;
    height: 100%;
    object-fit: contain;
    object-position: center;
  }
  
  .gallery-slides-container {
    display: flex;
    width: auto;
    height: 100%;
    transition: transform 0.3s ease;
  }
  
  @media screen and (max-width: 768px) {
    .gallery-slides-container {
      width: 100%;
      transition: transform 0.3s ease;
    }
  }
  
  .gallery-slide:not(:last-child) {
    margin-right: 1rem;
  }
  
  @media screen and (max-width: 768px) {
    .gallery-slide:not(:last-child) {
      margin-right: 0;
    }
  }
  
  /* Navigation Arrows */
  .gallery-navigation {
    position: absolute;
    bottom: 1rem;
    right: 1rem;
    display: flex;
    gap: 0.5rem;
    z-index: 2;
  }
  
  @media screen and (max-width: 768px) {
    .gallery-navigation {
      display: none;
    }
  }
  
  .nav-arrow {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 3rem;
    height: 3rem;
    background-color: rgba(245, 242, 217, 0.9);
    border: 1px solid #6e612b;
    border-radius: 50%;
    cursor: pointer;
    transition: all 0.3s ease;
    backdrop-filter: blur(5px);
  }
  
  .nav-arrow:hover {
    background-color: #6e612b;
    color: #f5f2d9;
  }
  
  .nav-arrow:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
  
  .nav-arrow svg {
    width: 1.2rem;
    height: 1.2rem;
    color: currentColor;
  }
  
  .nav-arrow.prev svg {
    transform: rotate(180deg);
  }
  
  /* Thumbnails */
  .product-thumbnails {
    display: flex;
    gap: 0.5rem;
    overflow-x: auto;
    padding: 0.5rem 0;
    scrollbar-width: none;
    -ms-overflow-style: none;
  }
  
  .product-thumbnails::-webkit-scrollbar {
    display: none;
  }
  
  .thumbnail-item {
    flex-shrink: 0;
    width: auto;
    height: 3.7rem;
    border-radius: 10px;
    overflow: hidden;
    cursor: pointer;
    border: 2px solid transparent;
    transition: border-color 0.3s ease;
  }
  
  .thumbnail-item.active {
    border-color: #6e612b;
  }
  
  .thumbnail-image {
    width: auto;
    height: 100%;
    object-fit: cover;
    object-position: center;
  }
  
  /* Product Details */
  .product-header_product-details {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    padding: 2rem 0;
    height: auto;
    overflow-y: visible;
  }
  
  @media screen and (max-width: 768px) {
    .product-header_product-details {
      height: auto;
      padding: 1rem 0;
      width: 100%;
      box-sizing: border-box;
      position: static;
      overflow-y: visible;
    }
  }
  
  /* Product Title */
  .product-header_component .product-header_product-details .product-title,
  .product-header_component .product-header_product-details h1.product-title,
  .product-header_component h1.product-title {
    font-family: Karla, sans-serif !important;
    color: #6e612b !important;
    font-size: 1.75rem !important;
    font-weight: 600 !important;
    margin: 0 !important;
    padding: 0 !important;
    word-wrap: break-word !important;
    overflow-wrap: break-word !important;
    line-height: 1.2 !important;
    display: block !important;
    visibility: visible !important;
    opacity: 1 !important;
    position: relative !important;
    z-index: 1 !important;
    width: 100% !important;
    height: auto !important;
    min-height: auto !important;
    max-width: none !important;
    transform: none !important;
    left: auto !important;
    right: auto !important;
    top: auto !important;
    bottom: auto !important;
  }
  
  @media screen and (max-width: 768px) {
    .product-header_component .product-header_product-details .product-title,
    .product-header_component .product-header_product-details h1.product-title,
    .product-header_component h1.product-title {
      font-size: 1.5rem !important;
    }
  }
  
  .product-price-wrapper {
    display: flex;
    align-items: center;
    gap: 1rem;
    flex-wrap: wrap;
  }
  
  .product-price {
    font-family: Karla, sans-serif;
    color: #6e612b;
    font-size: 1.5rem;
    font-weight: 600;
  }
  
  @media screen and (max-width: 768px) {
    .product-price {
      font-size: 1.3rem;
    }
  }
  
  .product-compare-price {
    font-family: Karla, sans-serif;
    color: #9e8c73;
    font-size: 1.2rem;
    text-decoration: line-through;
  }
  
  @media screen and (max-width: 768px) {
    .product-compare-price {
      font-size: 1rem;
    }
  }
  
  .product-item_tag {
    padding: 0.3rem 1rem;
    border-radius: 8px;
    background-color: #e74c3c;
    color: white;
    font-size: 0.85rem;
    font-weight: 500;
  }
  
  .stock-status {
    font-family: Karla, sans-serif;
    font-size: 0.9rem;
    padding: 0.5rem;
    text-align: center;
    border-radius: 5px;
  }
  
  .in-stock {
    background-color: #e8f5e8;
    color: #2d5a2d;
  }
  
  .out-of-stock {
    background-color: #ffe8e8;
    color: #8b0000;
  }
  
  .product-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }
  
  .product-tags .product-item_tag {
    background-color: #9e8c73;
  }
  
  .product-description {
    font-family: Karla, sans-serif;
    color: #6e612b;
    line-height: 1.6;
    word-wrap: break-word;
    overflow-wrap: break-word;
  }
  
  /* Variant Selection */
  .variant-selector {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    width: 100%;
  }
  
  .variant-label {
    font-family: Karla, sans-serif;
    color: #6e612b;
    font-weight: 600;
    font-size: 1rem;
  }
  
  .variant-select {
    padding: 0.75rem 1rem;
    border: 1px solid #6e612b;
    border-radius: 10px;
    background-color: white;
    font-family: Karla, sans-serif;
    color: #6e612b;
    font-size: 1rem;
    cursor: pointer;
    width: 100%;
    box-sizing: border-box;
  }

  /* NOUVEAU : Styles pour le formulaire Back in Stock */
  .back-in-stock-form {
    background: #f5f2d9;
    border: 1px solid #e9ecef;
    border-radius: 12px;
    padding: 24px;
    margin: 20px 0;
    width: 100%;
    box-sizing: border-box;
  }

  .stock-status-message {
    display: flex;
    align-items: center;
    gap: 8px;
    color: #f59e0b;
    font-weight: 500;
    margin-bottom: 16px;
    font-family: Karla, sans-serif;
  }

  .notification-form h3 {
    color: #6e612b;
    font-size: 18px;
    font-weight: 600;
    margin-bottom: 8px;
    font-family: Karla, sans-serif;
  }

  .notification-form p {
    color: #6e612b;
    font-size: 14px;
    margin-bottom: 20px;
    font-family: Karla, sans-serif;
  }

  .form-group {
    display: flex;
    gap: 12px;
    margin-bottom: 12px;
  }

  @media screen and (max-width: 768px) {
    .form-group {
      flex-direction: column;
      gap: 12px;
    }
  }

  .email-input {
    flex: 1;
    padding: 12px 16px;
    border: 1px solid #6e612b;
    border-radius: 10px;
    font-size: 16px;
    font-family: Karla, sans-serif;
    transition: border-color 0.2s;
    background-color: white;
    color: #6e612b;
  }

  .email-input:focus {
    outline: none;
    border-color: #e67e22;
    box-shadow: 0 0 0 3px rgba(230, 126, 34, 0.1);
  }

  .notify-btn {
    background: #6e612b;
    color: white;
    border: none;
    padding: 12px 24px;
    border-radius: 10px;
    font-weight: 600;
    cursor: pointer;
    transition: background-color 0.2s;
    display: flex;
    align-items: center;
    justify-content: center;
    min-width: 120px;
    font-family: Karla, sans-serif;
    font-size: 1rem;
  }

  @media screen and (max-width: 768px) {
    .notify-btn {
      width: 100%;
      min-width: auto;
    }
  }

  .notify-btn:hover {
    background: #5a4f23;
  }

  .notify-btn:disabled:not(:hover) {
    background: #6e612b;
    opacity: 0.7;
    cursor: not-allowed;
  }

  /* Animation quand l'email est saisi */
  .email-input:not(:placeholder-shown) + .notify-btn:not(:disabled) {
    background: #ec8451;
    transition: background-color 0.3s ease;
  }

  .email-input:not(:placeholder-shown) + .notify-btn:not(:disabled):hover {
    background: #d46b3a;
  }

  .form-message {
    padding: 12px;
    border-radius: 6px;
    font-size: 14px;
    text-align: center;
    font-family: Karla, sans-serif;
    margin-top: 12px;
  }

  .form-message.success {
    background: #d1fae5;
    color: #065f46;
    border: 1px solid #a7f3d0;
  }

  .form-message.error {
    background: #fee2e2;
    color: #991b1b;
    border: 1px solid #fca5a5;
  }

  .spinner {
    animation: rotate 1s linear infinite;
    width: 20px;
    height: 20px;
  }

  @keyframes rotate {
    100% { transform: rotate(360deg); }
  }

  .path {
    stroke-dasharray: 90, 150;
    stroke-dashoffset: 0;
    stroke-linecap: round;
    animation: dash 1.5s ease-in-out infinite;
  }

  @keyframes dash {
    0% {
      stroke-dasharray: 1, 150;
      stroke-dashoffset: 0;
    }
    50% {
      stroke-dasharray: 90, 150;
      stroke-dashoffset: -35;
    }
    100% {
      stroke-dasharray: 90, 150;
      stroke-dashoffset: -124;
    }
  }
  
  /* Add to Cart Button - Masqué dans ce template */
  .add-to-cart-button {
    display: none !important;
  }

  .add-to-cart-section {
    display: none !important;
  }

  /* Message de feedback */
  .add-to-cart-message {
    margin-top: 0.5rem;
    padding: 0.5rem;
    border-radius: 5px;
    font-family: Karla, sans-serif;
    font-size: 0.9rem;
    text-align: center;
  }

  .add-to-cart-message.success {
    background-color: #d4edda;
    color: #155724;
    border: 1px solid #c3e6cb;
  }

  .add-to-cart-message.error {
    background-color: #f8d7da;
    color: #721c24;
    border: 1px solid #f5c6cb;
  }

  /* Pictos Styles */
  .product-pictos-container {
    margin-top: 20px;
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    width: 100%;
    max-width: 100%;
  }

  @media screen and (min-width: 769px) {
    .product-pictos-container {
      display: flex !important;
      flex-wrap: wrap !important;
      gap: 1rem !important;
      align-items: flex-start !important;
      justify-content: flex-start !important;
    }

    .product-header_component .product-pictos-container .picto-produit div[class*="Div Block"],
    .product-header_component .picto-produit div[class*="Div Block"],
    .product-pictos-container .picto-produit div[class*="Div Block"],
    .picto-produit div[class*="Div Block"] {
      width: 100% !important;
      height: 40px !important;
      max-height: 40px !important;
      min-height: 40px !important;
      flex: 0 0 40px !important;
      display: flex !important;
      align-items: center !important;
      justify-content: center !important;
      overflow: hidden !important;
      box-sizing: border-box !important;
    }

    .product-header_component .product-pictos-container .picto-produit div[class*="Div Block"] img[class*="Image"],
    .product-header_component .product-pictos-container .picto-produit img[class*="Image"],
    .product-header_component .picto-produit div[class*="Div Block"] img,
    .product-header_component .picto-produit img,
    .product-pictos-container .picto-produit div[class*="Div Block"] img[class*="Image"],
    .product-pictos-container .picto-produit img[class*="Image"],
    .picto-produit div[class*="Div Block"] img,
    .picto-produit img,
    .picto-produit img[class*="Image"] {
      width: auto !important;
      height: 100% !important;
      max-width: 100% !important;
      max-height: 100% !important;
      min-width: auto !important;
      min-height: auto !important;
      object-fit: contain !important;
      object-position: center !important;
      display: block !important;
      box-sizing: border-box !important;
    }

    .product-header_component .picto-produit,
    .product-pictos-container .picto-produit,
    .picto-produit {
      height: 65px !important;
      max-height: 65px !important;
      min-height: 65px !important;
    }
  }

  @media screen and (max-width: 768px) {
    .product-pictos-container {
      display: grid !important;
      grid-template-columns: repeat(auto-fit, minmax(80px, 1fr)) !important;
      gap: 1rem !important;
      justify-items: center !important;
      width: 100% !important;
      max-width: 100% !important;
    }
  }

  .picto-produit {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    gap: 0.5rem;
    flex: 1;
    min-width: 80px;
    height: 60px;
    max-height: 60px;
  }

  .picto-produit .Div.Block.7 {
    display: flex;
    align-items: center;
    justify-content: center;
    width: auto;
    height: 25px;
    max-height: 25px;
    flex: 0 0 25px;
    overflow: hidden;
  }

  .picto-produit .Image.3 {
    width: auto !important;
    height: 25px !important;
    max-width: 40px !important;
    max-height: 25px !important;
    object-fit: contain;
    object-position: center;
  }

  @media screen and (min-width: 769px) {
    .product-header_component .product-pictos-container .picto-produit .Div.Block.7,
    .product-header_component .picto-produit .Div.Block.7,
    .product-pictos-container .picto-produit .Div.Block.7,
    .picto-produit .Div.Block.7 {
      width: 100% !important;
      height: 25px !important;
      max-height: 25px !important;
      min-height: 25px !important;
      flex: 0 0 25px !important;
      display: flex !important;
      align-items: center !important;
      justify-content: center !important;
      overflow: hidden !important;
      box-sizing: border-box !important;
    }

    .product-header_component .product-pictos-container .picto-produit .Div.Block.7 .Image.3,
    .product-header_component .product-pictos-container .picto-produit .Image.3,
    .product-header_component .picto-produit .Div.Block.7 img,
    .product-header_component .picto-produit img,
    .product-pictos-container .picto-produit .Div.Block.7 .Image.3,
    .product-pictos-container .picto-produit .Image.3,
    .picto-produit .Div.Block.7 img,
    .picto-produit img,
    .picto-produit .Image.3 {
      width: auto !important;
      height: 25px !important;
      max-width: 40px !important;
      max-height: 25px !important;
      min-width: auto !important;
      min-height: auto !important;
      object-fit: contain !important;
      object-position: center !important;
      display: block !important;
      box-sizing: border-box !important;
    }

    .product-header_component .picto-produit,
    .product-pictos-container .picto-produit,
    .picto-produit {
      height: 45px !important;
      max-height: 45px !important;
      min-height: 45px !important;
    }
  }

  .picto-produit .texte-picto {
    font-family: Karla, sans-serif;
    color: #6e612b;
    font-size: 0.75rem;
    font-weight: 500;
    text-align: center;
    line-height: 1;
    margin-top: auto;
  }

  /* Guide des tailles */
  .size-guide-button {
    font-family: Karla, sans-serif;
    font-size: 1rem;
    font-weight: 400;
    color: #6e612b;
    background: transparent;
    border: none;
    text-decoration: underline;
    cursor: pointer;
    padding: 0;
    text-align: right;
    white-space: nowrap;
    flex-shrink: 0;
  }

  .size-guide-button:hover {
    color: #5a4f23;
  }

  .variant-label-row {
    display: flex !important;
    justify-content: space-between !important;
    align-items: center !important;
    width: 100% !important;
  }

  /* Popup Guide des tailles */
  .size-guide-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 1000;
    display: none;
    align-items: center;
    justify-content: center;
    padding: 20px;
    box-sizing: border-box;
  }

  .size-guide-popup {
    background: white;
    border-radius: 15px;
    max-width: 800px;
    width: 100%;
    max-height: 90vh;
    position: relative;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
    overflow: hidden;
  }

  .size-guide-close {
    background: none;
    border: none;
    font-size: 1.5rem;
    cursor: pointer;
    color: #6e612b;
    width: 30px;
    height: 30px;
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    top: 15px;
    right: 15px;
    z-index: 1001;
  }

  .size-guide-content {
    padding: 2rem;
    max-height: calc(90vh - 60px);
    overflow-y: auto;
    font-family: Karla, sans-serif;
    line-height: 1.6;
    color: #333;
  }

  @media screen and (max-width: 768px) {
    .size-guide-popup {
      max-width: 95%;
      max-height: 85vh;
    }

    .size-guide-content {
      padding: 20px 10px;
      max-height: calc(85vh - 60px);
    }
  }

  @media screen and (max-width: 768px) {
    .product-pictos-container {
      display: grid !important;
      grid-template-columns: repeat(auto-fit, minmax(80px, 1fr)) !important;
      gap: 1rem !important;
      justify-items: center !important;
      width: 100% !important;
      max-width: 100% !important;
    }
    
    .picto-produit {
      min-width: 70px;
      height: 60px;
      max-height: 60px;
      display: flex !important;
      flex-direction: column !important;
      align-items: center !important;
      justify-content: space-between !important;
    }

    .picto-produit .Div.Block.7 {
      width: 100% !important;
      height: 40px !important;
      max-height: 40px !important;
      flex: 0 0 40px !important;
      display: flex !important;
      align-items: center !important;
      justify-content: center !important;
      overflow: hidden !important;
    }

    .product-pictos-container .picto-produit div[class*="Div Block"] img[class*="Image"],
    .product-pictos-container .picto-produit img[class*="Image"],
    .picto-produit div[class*="Div Block"] img,
    .picto-produit img {
      width: auto !important;
      height: 30px !important;
      max-width: 40px !important;
      max-height: 30px !important;
      min-width: auto !important;
      min-height: auto !important;
      object-fit: contain !important;
      object-position: center !important;
    }

    .picto-produit .texte-picto {
      font-size: 0.75rem !important;
      line-height: 1 !important;
      margin-top: 0.25rem !important;
      flex: 0 0 auto !important;
    }
  }
</style>

<div class="product-header_component" x-data="backInStockForm()">
  <div class="product-header_layout">
    
    <!-- Gallery Section - INCHANGÉ -->
    <div class="product-gallery-container">
      <div class="product-gallery-main" id="gallery-main">
        <div class="gallery-slides-container" id="slides-container">
          {% for media in product.media %}
            <div class="gallery-slide" data-slide="{{ forloop.index0 }}">
              {% if media.media_type == 'image' %}
                <img src="{{ media | image_url: width: 1000 }}"
                     alt="{{ media.alt | escape }}"
                     class="gallery-image"
                     loading="{% if forloop.first %}eager{% else %}lazy{% endif %}">
              {% elsif media.media_type == 'video' %}
                {{ media | video_tag: controls: true, class: "gallery-image" }}
              {% endif %}
            </div>
          {% endfor %}
        </div>
        
        <!-- Navigation Arrows -->
        {% if product.media.size > 1 %}
          <div class="gallery-navigation">
            <button type="button" class="nav-arrow prev" onclick="previousImage()" id="prev-btn">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
              </svg>
            </button>
            <button type="button" class="nav-arrow next" onclick="nextImage()" id="next-btn">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
              </svg>
            </button>
          </div>
        {% endif %}
      </div>
      
      <!-- Thumbnails -->
      {% if product.media.size > 1 %}
        <div class="product-thumbnails">
          {% for media in product.media %}
            <div class="thumbnail-item {% if forloop.first %}active{% endif %}" 
                 onclick="setCurrentImage({{ forloop.index0 }})"
                 data-thumbnail="{{ forloop.index0 }}">
              <img src="{{ media | image_url: width: 200 }}"
                   alt="{{ media.alt | escape }}"
                   class="thumbnail-image"
                   loading="lazy">
            </div>
          {% endfor %}
        </div>
      {% endif %}
    </div>
    
    <!-- Product Details Section -->
    <div class="product-header_product-details">
      
      <!-- Product Title -->
      <h1 class="product-title product-main-title">{{ product.title }}</h1>
      
      <!-- Price -->
      <div class="product-price-wrapper">
        <span class="product-price" x-text="formatPrice(selectedVariant.price)">{{ product.selected_or_first_available_variant.price | money }}</span>
        <span class="product-compare-price" 
              x-show="selectedVariant.compare_at_price > selectedVariant.price"
              x-text="formatPrice(selectedVariant.compare_at_price)">{{ product.selected_or_first_available_variant.compare_at_price | money }}</span>
        <span class="product-item_tag" x-show="selectedVariant.compare_at_price > selectedVariant.price">Sale</span>
      </div>
      
      <!-- Product Description -->
      {% if product.description != blank %}
        <div class="product-description">{{ product.description }}</div>
      {% endif %}
      
      <!-- Variant Selection -->
      {% unless product.has_only_default_variant %}
        {% for option in product.options_with_values %}
          <div class="variant-selector">
            {% if option.name contains 'aille' or option.name contains 'Taille' or option.name contains 'Pointure' %}
              <div class="variant-label-row">
                <label class="variant-label">{{ option.name }}</label>
                <button type="button" class="size-guide-button" onclick="openSizeGuide()">
                  Guide des tailles
                </button>
              </div>
            {% else %}
              <label class="variant-label">{{ option.name }}</label>
            {% endif %}
            <select class="variant-select" 
                    x-model="selectedOptions[{{ forloop.index0 }}]"
                    @change="updateSelectedVariant()">
              {% for value in option.values %}
                <option value="{{ value | escape }}">{{ value }}</option>
              {% endfor %}
            </select>
          </div>
        {% endfor %}
      {% endunless %}
      
      <!-- NOUVEAU : Formulaire Back in Stock (remplace shipping-info) -->
      <div class="back-in-stock-form">
        <div class="stock-status-message">
          <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
            <circle cx="10" cy="10" r="9" stroke="#f59e0b" stroke-width="2"/>
            <path d="m9 9 2 2 4-4" stroke="#f59e0b" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
          Coming soon !
        </div>
        
        <div class="notification-form">
          <h3>{{ section.settings.back_in_stock_title | default: "Soyez notifié(e) du retour en stock" }}</h3>
          <p>{{ section.settings.back_in_stock_message | default: "Laissez votre email et nous vous préviendrons dès que ce produit sera à nouveau disponible." }}</p>
          
          <form class="stock-notification-form" @submit.prevent="submitForm()">
            <div class="form-group">
              <input 
                type="email" 
                x-model="email"
                placeholder="Votre adresse email"
                required
                class="email-input"
                :disabled="isLoading"
              >
              <button type="submit" class="notify-btn" :disabled="isLoading || !email">
                <span x-show="!isLoading" class="btn-text">Me notifier</span>
                <span x-show="isLoading" class="btn-loading">
                  <svg class="spinner" width="20" height="20" viewBox="0 0 50 50">
                    <circle cx="25" cy="25" r="20" fill="none" stroke="#ffffff" stroke-width="2" stroke-linecap="round" stroke-dashoffset="31.416" stroke-dasharray="31.416" class="path"></circle>
                  </svg>
                </span>
              </button>
            </div>
            <div x-show="message.show" 
                 x-transition
                 class="form-message"
                 :class="message.type">
              <span x-text="message.text"></span>
            </div>
          </form>
        </div>
      </div>

      <!-- Product Pictos Section -->
      <div class="product-pictos-container">
        {% for block in section.blocks %}
          {% if block.type == "picto-produit" %}
            <div class="picto-produit" {{ block.shopify_attributes }}>
              <div class="Div Block 7">
                {% if block.settings.picto_image %}
                  <img class="Image 3" 
                       width="auto" 
                       height="auto" 
                       alt="{{ block.settings.picto_alt | default: block.settings.picto_text | escape }}" 
                       src="{{ block.settings.picto_image | image_url }}" 
                       loading="lazy">
                {% else %}
                  <img class="Image 3" 
                       width="auto" 
                       height="auto" 
                       alt="inherit" 
                       src="https://cdn.prod.website-files.com/689370215f6dcea901024517/68946f4e84aec1da47fa5e95_SAV.svg" 
                       loading="lazy">
                {% endif %}
              </div>
              <div class="texte-picto">
                {{ block.settings.picto_text | default: "Souple" }}
              </div>
            </div>
          {% endif %}
        {% endfor %}
      </div>
      
    </div>
  </div>

  <!-- Popup Guide des tailles -->
  <div class="size-guide-overlay" id="sizeGuideOverlay" onclick="closeSizeGuide(event)">
    <div class="size-guide-popup" onclick="event.stopPropagation()">
      <button class="size-guide-close" onclick="closeSizeGuide()">&times;</button>
      <div class="size-guide-content" id="sizeGuideContent">
        <p>Chargement...</p>
      </div>
    </div>
  </div>
</div>

<script>
// Alpine.js Component pour le formulaire Back in Stock
document.addEventListener('alpine:init', () => {
  Alpine.data('backInStockForm', () => ({
    // État initial
    selectedOptions: {{ product.selected_or_first_available_variant.options | json }},
    selectedVariant: {{ product.selected_or_first_available_variant | json }},
    productVariants: {{ product.variants | json }},
    email: '',
    isLoading: false,
    message: {
      show: false,
      text: '',
      type: 'success' // 'success' ou 'error'
    },

    // Initialisation
    init() {
      console.log('Back in stock form initialized');
      this.updateSelectedVariant();
    },

    // Mise à jour de la variante sélectionnée
    updateSelectedVariant() {
      const matchingVariant = this.productVariants.find(variant => {
        return this.selectedOptions.every((option, index) => {
          return variant[`option${index + 1}`] === option;
        });
      });

      if (matchingVariant) {
        this.selectedVariant = matchingVariant;
        this.updateURL(matchingVariant.id);
      }
    },

    // Formatage du prix
    formatPrice(cents) {
      if (typeof LiquifyHelper !== 'undefined') {
        return LiquifyHelper.moneyFormat(cents, true, '{{ shop.money_with_currency_format }}');
      }
      return new Intl.NumberFormat('fr-FR', {
        style: 'currency',
        currency: '{{ cart.currency.iso_code | default: "EUR" }}'
      }).format(cents / 100);
    },

    // Mise à jour de l'URL
    updateURL(variantId) {
      const newUrl = new URL(window.location);
      newUrl.searchParams.set('variant', variantId);
      window.history.replaceState({}, '', newUrl);
    },

    // FONCTION PRINCIPALE : Soumission du formulaire Back in Stock
    async submitForm() {
      if (!this.email || this.isLoading) {
        return;
      }

      this.isLoading = true;
      this.hideMessage();

      try {
        // Option 1 : Essayer l'API JavaScript Klaviyo si disponible
        if (typeof _learnq !== 'undefined') {
          _learnq.push(['identify', {
            '$email': this.email,
            'product_id': {{ product.id }},
            'variant_id': this.selectedVariant.id,
            'product_name': {{ product.title | json }},
            'product_url': '{{ shop.secure_url }}{{ product.url }}',
            'product_image': '{{ product.featured_image | image_url: width: 600 }}',
            'product_price': this.selectedVariant.price,
            'variant_title': this.selectedVariant.title,
            'back_in_stock_request': true,
            'requested_at': new Date().toISOString()
          }]);

          _learnq.push(['track', 'Back in Stock Request', {
            'product_id': {{ product.id }},
            'variant_id': this.selectedVariant.id,
            'product_name': {{ product.title | json }},
            'product_url': '{{ shop.secure_url }}{{ product.url }}',
            'product_image': '{{ product.featured_image | image_url: width: 600 }}',
            'product_price': this.selectedVariant.price,
            'variant_title': this.selectedVariant.title
          }]);

          this.showMessage('✓ Parfait ! Vous serez notifié(e) dès que ce produit sera disponible.', 'success');
          this.email = '';
          return;
        }

        // Option 2 : Utiliser l'API REST Klaviyo avec un proxy
        const response = await fetch('/apps/proxy/klaviyo-back-in-stock', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            email: this.email,
            product_id: {{ product.id }},
            variant_id: this.selectedVariant.id,
            product_name: {{ product.title | json }},
            product_url: '{{ shop.secure_url }}{{ product.url }}',
            product_image: '{{ product.featured_image | image_url: width: 600 }}',
            product_price: this.selectedVariant.price,
            variant_title: this.selectedVariant.title,
            list_id: 'WzLznD'
          })
        });

        if (response.ok) {
          this.showMessage('✓ Parfait ! Vous serez notifié(e) dès que ce produit sera disponible.', 'success');
          this.email = '';
        } else {
          throw new Error('Erreur serveur');
        }

      } catch (error) {
        console.error('Erreur lors de l\'inscription:', error);
        
        // Option 3 : Fallback - Envoyer vers un webhook ou Zapier
        try {
          const fallbackResponse = await fetch('https://hooks.zapier.com/hooks/catch/YOUR_WEBHOOK_ID/', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              email: this.email,
              product_id: {{ product.id }},
              variant_id: this.selectedVariant.id,
              product_name: {{ product.title | json }},
              product_url: '{{ shop.secure_url }}{{ product.url }}',
              product_image: '{{ product.featured_image | image_url: width: 600 }}',
              product_price: this.selectedVariant.price,
              variant_title: this.selectedVariant.title,
              source: 'back_in_stock_form'
            })
          });

          if (fallbackResponse.ok) {
            this.showMessage('✓ Parfait ! Vous serez notifié(e) dès que ce produit sera disponible.', 'success');
            this.email = '';
          } else {
            throw new Error('Tous les systèmes sont indisponibles');
          }
        } catch (fallbackError) {
          this.showMessage('Une erreur est survenue. Veuillez réessayer plus tard.', 'error');
        }
      } finally {
        this.isLoading = false;
      }
    },

    // Afficher un message
    showMessage(text, type = 'success') {
      this.message = {
        show: true,
        text: text,
        type: type
      };
      
      // Masquer automatiquement après 5 secondes
      setTimeout(() => {
        this.hideMessage();
      }, 5000);
    },

    // Masquer le message
    hideMessage() {
      this.message.show = false;
    }
  }));
});

// Variables globales pour la galerie (inchangé)
let currentImageIndex = 0;
const totalImages = {{ product.media.size }};

// Variables pour le swipe mobile (inchangé)
let startX = 0;
let startY = 0;
let currentX = 0;
let currentY = 0;
let isDragging = false;
let isSwipeActive = false;

// Fonction pour déterminer si on est sur mobile (inchangé)
function isMobile() {
  return window.innerWidth <= 768;
}

// Navigation des images (inchangé)
function nextImage() {
  currentImageIndex = (currentImageIndex + 1) % totalImages;
  updateGalleryDisplay();
}

function previousImage() {
  currentImageIndex = (currentImageIndex - 1 + totalImages) % totalImages;
  updateGalleryDisplay();
}

function setCurrentImage(index) {
  currentImageIndex = index;
  updateGalleryDisplay();
}

function updateGalleryDisplay() {
  const slidesContainer = document.getElementById('slides-container');
  const slides = document.querySelectorAll('.gallery-slide');
  
  if (slidesContainer && slides.length > 0) {
    if (isMobile()) {
      const offset = currentImageIndex * 100;
      slidesContainer.style.transform = `translateX(-${offset}%)`;
    } else {
      let offset = 0;
      for (let i = 0; i < currentImageIndex; i++) {
        const slideWidth = slides[i].offsetWidth;
        const marginRight = 16;
        offset += slideWidth + marginRight;
      }
      slidesContainer.style.transform = `translateX(-${offset}px)`;
    }
  }
  
  const thumbnails = document.querySelectorAll('.thumbnail-item');
  thumbnails.forEach((thumb, index) => {
    thumb.classList.toggle('active', index === currentImageIndex);
  });
  
  const activeThumbnail = document.querySelector('.thumbnail-item.active');
  if (activeThumbnail && !isMobile()) {
    activeThumbnail.scrollIntoView({
      behavior: 'smooth',
      block: 'nearest',
      inline: 'center'
    });
  }
}

// Gestion du swipe sur mobile (inchangé)
function initializeSwipe() {
  const galleryMain = document.getElementById('gallery-main');
  
  if (!galleryMain || !isMobile()) return;
  
  galleryMain.addEventListener('touchstart', handleTouchStart, { passive: true });
  galleryMain.addEventListener('touchmove', handleTouchMove, { passive: true });
  galleryMain.addEventListener('touchend', handleTouchEnd, { passive: true });
}

function handleTouchStart(e) {
  startX = e.touches[0].clientX;
  startY = e.touches[0].clientY;
  isDragging = true;
  isSwipeActive = false;
  currentX = startX;
  currentY = startY;
}

function handleTouchMove(e) {
  if (!isDragging) return;
  
  currentX = e.touches[0].clientX;
  currentY = e.touches[0].clientY;
  const diffX = Math.abs(currentX - startX);
  const diffY = Math.abs(currentY - startY);
  
  if (diffX > 50 && diffX > diffY * 3) {
    isSwipeActive = true;
  } else if (diffY > 20) {
    isDragging = false;
    isSwipeActive = false;
  }
}

function handleTouchEnd(e) {
  if (!isDragging) {
    return;
  }
  
  if (isSwipeActive) {
    const diffX = currentX - startX;
    const threshold = 50;
    
    if (Math.abs(diffX) > threshold) {
      if (diffX > 0) {
        previousImage();
      } else {
        nextImage();
      }
    }
  }
  
  isDragging = false;
  isSwipeActive = false;
}

// Fonctions pour le guide des tailles (inchangé)
function openSizeGuide() {
  const overlay = document.getElementById('sizeGuideOverlay');
  const content = document.getElementById('sizeGuideContent');
  
  overlay.style.display = 'flex';
  document.body.style.overflow = 'hidden';
  
  fetch('/pages/guide-des-tailles')
    .then(response => response.text())
    .then(data => {
      const parser = new DOMParser();
      const doc = parser.parseFromString(data, 'text/html');
      const pageContent = doc.querySelector('.page-content, .rte, main, .content, .page') || doc.querySelector('body');
      
      if (pageContent) {
        content.innerHTML = pageContent.innerHTML;
      } else {
        content.innerHTML = '<p>Impossible de charger le guide des tailles.</p>';
      }
    })
    .catch(error => {
      console.error('Erreur lors du chargement du guide des tailles:', error);
      content.innerHTML = '<p>Erreur lors du chargement du guide des tailles.</p>';
    });
}

function closeSizeGuide(event) {
  if (!event || event.target === document.getElementById('sizeGuideOverlay') || event.target.classList.contains('size-guide-close')) {
    const overlay = document.getElementById('sizeGuideOverlay');
    overlay.style.display = 'none';
    document.body.style.overflow = '';
  }
}

// Initialisation
document.addEventListener('DOMContentLoaded', function() {
  updateGalleryDisplay();
  initializeSwipe();
  
  // Protection renforcée pour le titre du produit (inchangé)
  const protectTitle = () => {
    const titles = document.querySelectorAll('.product-header_component .product-title, .product-header_component .product-main-title, .product-header_component h1.product-title');
    titles.forEach(title => {
      if (title) {
        const styles = {
          'display': 'block',
          'visibility': 'visible',
          'opacity': '1',
          'position': 'relative',
          'z-index': '1',
          'font-size': window.innerWidth <= 768 ? '1.5rem' : '1.75rem',
          'font-family': 'Karla, sans-serif',
          'color': '#6e612b',
          'font-weight': '600',
          'line-height': '1.2',
          'margin': '0',
          'padding': '0'
        };
        
        Object.keys(styles).forEach(property => {
          title.style.setProperty(property, styles[property], 'important');
        });
      }
    });
  };

  // Fonction pour ajuster les images des pictos sur mobile (inchangé)
  const adjustPictosOnMobile = () => {
    if (window.innerWidth <= 768) {
      const pictoImages = document.querySelectorAll('.product-pictos-container img, .picto-produit img');
      
      pictoImages.forEach(img => {
        img.style.setProperty('width', 'auto', 'important');
        img.style.setProperty('height', '30px', 'important');
        img.style.setProperty('max-width', '40px', 'important');
        img.style.setProperty('max-height', '30px', 'important');
        img.style.setProperty('object-fit', 'contain', 'important');
        img.style.setProperty('object-position', 'center', 'important');
      });

      const pictoContainers = document.querySelectorAll('.picto-produit > div:first-child');
      pictoContainers.forEach(container => {
        container.style.setProperty('width', '100%', 'important');
        container.style.setProperty('height', '40px', 'important');
        container.style.setProperty('max-height', '40px', 'important');
        container.style.setProperty('display', 'flex', 'important');
        container.style.setProperty('align-items', 'center', 'important');
        container.style.setProperty('justify-content', 'center', 'important');
        container.style.setProperty('overflow', 'hidden', 'important');
      });
    }
  };

  // Fonction pour forcer le style flex sur le wrapper du guide des tailles (inchangé)
  const fixSizeGuideLayout = () => {
    const wrappers = document.querySelectorAll('.variant-label-row');
    wrappers.forEach(wrapper => {
      wrapper.style.setProperty('display', 'flex', 'important');
      wrapper.style.setProperty('justify-content', 'space-between', 'important');
      wrapper.style.setProperty('align-items', 'center', 'important');
      wrapper.style.setProperty('width', '100%', 'important');
    });
  };
  
  // Exécuter immédiatement et à intervalles (inchangé)
  protectTitle();
  adjustPictosOnMobile();
  fixSizeGuideLayout();
  setTimeout(protectTitle, 50);
  setTimeout(adjustPictosOnMobile, 50);
  setTimeout(fixSizeGuideLayout, 50);
  setTimeout(protectTitle, 100);
  setTimeout(adjustPictosOnMobile, 100);
  setTimeout(fixSizeGuideLayout, 100);
  setTimeout(protectTitle, 200);
  setTimeout(adjustPictosOnMobile, 200);
  setTimeout(fixSizeGuideLayout, 200);
  setTimeout(protectTitle, 500);
  setTimeout(adjustPictosOnMobile, 500);
  setTimeout(fixSizeGuideLayout, 500);
  setTimeout(protectTitle, 1000);
  setTimeout(adjustPictosOnMobile, 1000);
  setTimeout(fixSizeGuideLayout, 1000);
  setTimeout(protectTitle, 2000);
  setTimeout(adjustPictosOnMobile, 2000);
  setTimeout(fixSizeGuideLayout, 2000);
  
  // Observer continu (inchangé)
  setInterval(protectTitle, 1000);
  setInterval(adjustPictosOnMobile, 1000);
  setInterval(fixSizeGuideLayout, 1000);
  
  // Debug mobile (inchangé)
  if (isMobile()) {
    let isUserScrolling = false;
    
    window.addEventListener('scroll', function() {
      if (!isUserScrolling) {
        console.log('Scroll automatique détecté');
      }
    }, { passive: true });
    
    document.addEventListener('touchstart', function() {
      isUserScrolling = true;
      setTimeout(() => { isUserScrolling = false; }, 300);
    }, { passive: true });
  }
  
  // Re-calculer lors du redimensionnement de la fenêtre (inchangé)
  window.addEventListener('resize', function() {
    setTimeout(() => {
      updateGalleryDisplay();
      initializeSwipe();
      protectTitle();
      adjustPictosOnMobile();
      fixSizeGuideLayout();
    }, 100);
  });
});
</script>

{% schema %}
{
  "name": "Hero Back in Stock",
  "tag": "section",
  "class": "Section-produit-fiche",
  "settings": [
    {
      "type": "checkbox",
      "id": "show_back_in_stock_form",
      "label": "Afficher le formulaire Back in Stock",
      "default": true
    },
    {
      "type": "text",
      "id": "back_in_stock_title",
      "label": "Titre du formulaire",
      "default": "Soyez notifié(e) du retour en stock"
    },
    {
      "type": "textarea",
      "id": "back_in_stock_message",
      "label": "Message du formulaire",
      "default": "Laissez votre email et nous vous préviendrons dès que ce produit sera à nouveau disponible."
    }
  ],
  "blocks": [
    {
      "type": "picto-produit",
      "name": "Picto produit",
      "limit": 6,
      "settings": [
        {
          "type": "image_picker",
          "id": "picto_image",
          "label": "Image du picto"
        },
        {
          "type": "text",
          "id": "picto_text",
          "label": "Texte du picto",
          "default": "Souple"
        },
        {
          "type": "text",
          "id": "picto_alt",
          "label": "Texte alternatif de l'image"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Product Hero Back in Stock",
      "category": "Liquify"
    }
  ],
  "enabled_on": {
    "templates": ["product"]
  }
}
{% endschema %}
