<!-- Section collection avec padding correct -->
<section class="collection-section">
  {% paginate collection.products by 50 %}
  <div class="collection-container">
    
    <!-- Header avec bouton filtre et tri -->
    <div class="collection-header">
      <div class="collection-header-left">
        <button id="filter-toggle" class="filter-button">
          <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M2.5 5H17.5M5 10H15M7.5 15H12.5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"/>
          </svg>
          Filtres
          <span id="active-filters-count" class="filter-count" style="display: none;">0</span>
        </button>
      </div>
      
      {% if section.settings.show_sorting %}
      <div class="collection-header-right">
        <div class="sort-wrapper">
          <label for="sort-by" class="sort-label">Trier par :</label>
          <select id="sort-by" class="sort-select">
            {% for option in collection.sort_options %}
              <option value="{{ option.value }}" {% if option.value == collection.sort_by %}selected{% elsif option.value == collection.default_sort_by %}selected{% endif %}>
                {{ option.name }}
              </option>
            {% endfor %}
          </select>
        </div>
      </div>
      {% endif %}
    </div>

    <!-- Filtres actifs -->
    <div class="active-filters-wrapper" id="active-filters" style="display: none;">
      <div class="active-filters-list">
        {% for filters in collection.filters %}
          {% for filter_value in filters.active_values %}
            <div class="active-filter-tag">
              <span>{{ filter_value.label }}</span>
              <a href="{{ filter_value.url_to_remove }}" class="remove-filter" aria-label="Supprimer le filtre">
                <svg width="12" height="12" viewBox="0 0 12 12" fill="none">
                  <path d="M9 3L3 9M3 3L9 9" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"/>
                </svg>
              </a>
            </div>
          {% endfor %}
        {% endfor %}
      </div>
      <a href="{{ collection.url }}" class="clear-all-filters">Tout effacer</a>
    </div>



    <!-- Grille de produits -->
    <div class="products-grid">
      {% for product in collection.products %}
        <div class="product-item-wrapper">
          {% render 'product_item', product: product %}
        </div>
      {% endfor %}
    </div>

    {% if collection.products == blank %}
      <div class="empty-collection">
        <h3>Aucun résultat trouvé</h3>
        <p>Aucun produit ne correspond à vos critères. Essayez de modifier vos filtres.</p>
      </div>
    {% endif %}

    <!-- Pagination -->
    {% if paginate.pages > 1 %}
      <nav class="pagination-component">
        <ul class="pagination-list">
          {% if paginate.previous %}
            <li class="pagination-item">
              <a href="{{ paginate.previous.url }}" class="pagination-button pagination-prev">
                <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
                  <path d="M10 12L6 8L10 4" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
                Précédent
              </a>
            </li>
          {% endif %}
          
          {% for part in paginate.parts %}
            <li class="pagination-item">
              {% if part.is_link %}
                <a href="{{ part.url }}" class="pagination-number">{{ part.title }}</a>
              {% else %}
                <span class="pagination-number current">{{ part.title }}</span>
              {% endif %}
            </li>
          {% endfor %}
          
          {% if paginate.next %}
            <li class="pagination-item">
              <a href="{{ paginate.next.url }}" class="pagination-button pagination-next">
                Suivant
                <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
                  <path d="M6 4L10 8L6 12" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
              </a>
            </li>
          {% endif %}
        </ul>
      </nav>
    {% endif %}
  </div>

  <!-- Sidebar des filtres -->
  <div class="filter-sidebar" id="filter-sidebar">
    <div class="filter-sidebar-content">
      <div class="filter-sidebar-header">
        <h3>Filtres</h3>
        <button class="filter-close" id="filter-close">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
            <path d="M18 6L6 18M6 6L18 18" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
          </svg>
        </button>
      </div>

      <form action="{{ routes.search_url }}" method="get" class="filter-form">
        <input name="type" type="hidden" value="product">
        


        <!-- Filtres -->
        <div class="filter-groups">
          {% for filter in collection.filters %}
            {% if filter.values.size > 0 %}
              <div class="filter-group">
                <h4 class="filter-group-title">{{ filter.label }}</h4>
                <div class="filter-options">
                  {% for filter_value in filter.values %}
                    <div class="filter-option">
                      <a href="{% if filter_value.active %}{{ filter_value.url_to_remove }}{% else %}{{ filter_value.url_to_add }}{% endif %}" 
                         class="filter-checkbox {% if filter_value.count == 0 and filter_value.active == false %}disabled{% endif %}">
                        <div class="checkbox-icon {% if filter_value.active %}checked{% endif %}">
                          {% if filter_value.active %}
                            <svg width="12" height="12" viewBox="0 0 12 12" fill="none">
                              <path d="M10 3L4.5 8.5L2 6" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                          {% endif %}
                        </div>
                        <span class="checkbox-label">{{ filter_value.label }} ({{ filter_value.count }})</span>
                      </a>
                    </div>
                  {% endfor %}
                </div>
              </div>
            {% endif %}
          {% endfor %}
        </div>

        <div class="filter-actions">
          <a href="{{ collection.url }}" class="clear-filters-button">Effacer les filtres</a>
        </div>
      </form>
    </div>
  </div>

  <!-- Overlay -->
  <div class="filter-overlay" id="filter-overlay"></div>

  {% endpaginate %}
</section>

<style>
/* Section principale avec padding correct */
.collection-section {
  width: 100%;
  margin: 0;
  padding: 0;
}

.collection-container {
  width: 100%;
  max-width: none;
  margin: 0;
  /* Desktop padding - 20px */
  padding-left: 20px;
  padding-right: 20px;
  box-sizing: border-box;
}

/* Layout principal */
.collection-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2rem;
  flex-wrap: wrap;
  gap: 1rem;
}

.collection-header-left {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.collection-header-right {
  display: flex;
  align-items: center;
  gap: 1rem;
}

/* Bouton filtre */
.filter-button {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem 1rem;
  border: 1px solid #e5e5e5;
  background: white;
  border-radius: 6px;
  cursor: pointer;
  font-size: 0.9rem;
  font-family: 'Karla', sans-serif;
  color: #6e612b;
  transition: all 0.2s ease;
}

.filter-button:hover {
  background: #f8f8f8;
  border-color: #d1d1d1;
}

.filter-count {
  background: #ec8451;
  color: white;
  border-radius: 50%;
  width: 20px;
  height: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.75rem;
  font-weight: 600;
}

/* Tri */
.sort-wrapper {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.sort-label {
  font-size: 0.9rem;
  font-family: 'Karla', sans-serif;
  color: #6e612b;
}

.sort-select {
  padding: 0.5rem;
  border: 1px solid #e5e5e5;
  border-radius: 4px;
  background: white;
  font-size: 0.9rem;
  font-family: 'Karla', sans-serif;
  color: #6e612b;
}

/* Filtres actifs */
.active-filters-wrapper {
  margin-bottom: 1.5rem;
  padding: 0;
  background: transparent;
  border-radius: 0;
}

.active-filters-list {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  margin-bottom: 0.5rem;
}

.active-filter-tag {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.25rem 0.75rem;
  background: white;
  border: 1px solid #e5e5e5;
  border-radius: 20px;
  font-size: 0.85rem;
  font-family: 'Karla', sans-serif;
  color: #6e612b;
}

.remove-filter {
  color: #666;
  text-decoration: none;
}

.remove-filter:hover {
  color: #ec8451;
}

.clear-all-filters {
  font-size: 0.85rem;
  font-family: 'Karla', sans-serif;
  color: #6e612b;
  text-decoration: underline;
}

/* Grille de produits */
.products-grid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 20px; /* Changé de 2rem (32px) à 20px */
  margin-bottom: 3rem;
}

.product-item-wrapper {
  position: relative;
  width: 100%;
}

/* Assurer que les produits utilisent le même style que la section Manual Products */
.products-grid .product_list-item {
  width: 100%;
}

/* Collection vide */
.empty-collection {
  text-align: center;
  padding: 4rem 2rem;
  color: #666;
}

.empty-collection h3 {
  margin-bottom: 1rem;
  color: #333;
}

/* Pagination */
.pagination-component {
  margin-top: 3rem;
}

.pagination-list {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.5rem;
  list-style: none;
  margin: 0;
  padding: 0;
}

.pagination-button,
.pagination-number {
  padding: 0.75rem 1rem;
  border: 1px solid #e5e5e5;
  background: white;
  text-decoration: none;
  color: #333;
  border-radius: 6px;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.pagination-button:hover,
.pagination-number:hover {
  background: #f8f8f8;
  border-color: #007bff;
  color: #007bff;
}

.pagination-number.current {
  background: #007bff;
  color: white;
  border-color: #007bff;
}

/* Sidebar des filtres */
.filter-sidebar {
  position: fixed;
  top: 0;
  right: -400px;
  width: 400px;
  height: 100vh;
  background: white;
  box-shadow: -2px 0 10px rgba(0,0,0,0.1);
  z-index: 1000;
  transition: right 0.3s ease;
  overflow-y: auto;
}

.filter-sidebar.open {
  right: 0;
}

.filter-sidebar-content {
  padding: 1.5rem;
}

.filter-sidebar-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2rem;
  padding-bottom: 1rem;
  border-bottom: 1px solid #e5e5e5;
}

.filter-sidebar-header h3 {
  margin: 0;
  font-size: 1.25rem;
  font-weight: 600;
  font-family: 'Karla', sans-serif;
  color: #6e612b;
}

.filter-close {
  background: none;
  border: none;
  cursor: pointer;
  padding: 0.25rem;
  color: #666;
}

.filter-close:hover {
  color: #333;
}

/* Formulaire de filtres */

/* Groupes de filtres */
.filter-group {
  margin-bottom: 2rem;
}

.filter-group-title {
  margin: 0 0 1rem 0;
  font-size: 1rem;
  font-weight: 600;
  font-family: 'Karla', sans-serif;
  color: #6e612b;
  padding-bottom: 0.5rem;
  border-bottom: 1px solid #f0f0f0;
}

.filter-options {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 0.75rem;
}

.filter-checkbox {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  text-decoration: none;
  font-family: 'Karla', sans-serif;
  color: #6e612b;
  transition: color 0.2s ease;
}

.filter-checkbox:hover:not(.disabled) {
  color: #ec8451;
}

.filter-checkbox.disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.checkbox-icon {
  width: 20px;
  height: 20px;
  border: 2px solid #e5e5e5;
  border-radius: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s ease;
}

.checkbox-icon.checked {
  background: #ec8451;
  border-color: #ec8451;
  color: white;
}

.checkbox-label {
  font-size: 0.9rem;
  font-family: 'Karla', sans-serif;
}

/* Actions des filtres */
.filter-actions {
  margin-top: 2rem;
  padding-top: 2rem;
  border-top: 1px solid #e5e5e5;
}

.clear-filters-button {
  width: 100%;
  padding: 0.75rem;
  background: #f8f9fa;
  border: 1px solid #e5e5e5;
  border-radius: 6px;
  text-align: center;
  text-decoration: none;
  font-family: 'Karla', sans-serif;
  color: #6e612b;
  transition: all 0.2s ease;
}

.clear-filters-button:hover {
  background: #e9ecef;
  color: #6e612b;
}

/* Overlay */
.filter-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: rgba(0,0,0,0.5);
  z-index: 999;
  opacity: 0;
  visibility: hidden;
  transition: all 0.3s ease;
}

.filter-overlay.visible {
  opacity: 1;
  visibility: visible;
}

/* Media queries - RESPONSIVE PADDING */
@media (max-width: 1024px) {
  .products-grid {
    grid-template-columns: repeat(3, 1fr);
    gap: 1.5rem;
  }
  
  .filter-sidebar {
    width: 350px;
    right: -350px;
  }
}

@media (max-width: 768px) {
  /* Tablette - 20px padding */
  .collection-container {
    padding-left: 20px;
    padding-right: 20px;
  }
  
  .products-grid {
    grid-template-columns: repeat(2, 1fr);
    gap: 1rem;
  }
  
  .collection-header {
    flex-direction: column;
    align-items: stretch;
  }
  
  .collection-header-left,
  .collection-header-right {
    justify-content: center;
  }
  
  .filter-sidebar {
    width: 300px;
    right: -300px;
  }
  
  .filter-sidebar-content {
    padding: 1rem;
  }
}

@media (max-width: 480px) {
  /* Mobile - 10px padding */
  .collection-container {
    padding-left: 10px;
    padding-right: 10px;
  }
  
  .products-grid {
    grid-template-columns: repeat(2, 1fr);
    gap: 1rem;
  }
  
  .filter-sidebar {
    width: 100vw;
    right: -100vw;
  }
  
  /* Bouton filtre pleine largeur sur mobile */
  .collection-header {
    flex-direction: column;
    align-items: stretch;
  }
  
  .collection-header-left {
    justify-content: center;
  }
  
  .filter-button {
    width: 100%;
    justify-content: center;
  }
}

/* Reset des styles par défaut qui pourraient interférer */
.collection-section * {
  box-sizing: border-box;
}

/* S'assurer que la section prend bien toute la largeur */
.collection-section {
  margin-left: 0 !important;
  margin-right: 0 !important;
  padding-left: 0 !important;
  padding-right: 0 !important;
}
</style>

<script>
// Gestion des filtres JavaScript
document.addEventListener('DOMContentLoaded', function() {
  const filterToggle = document.getElementById('filter-toggle');
  const filterSidebar = document.getElementById('filter-sidebar');
  const filterClose = document.getElementById('filter-close');
  const filterOverlay = document.getElementById('filter-overlay');
  const sortSelect = document.getElementById('sort-by');
  
  // Ouvrir la sidebar
  filterToggle.addEventListener('click', function() {
    filterSidebar.classList.add('open');
    filterOverlay.classList.add('visible');
    document.body.style.overflow = 'hidden';
  });
  
  // Fermer la sidebar
  function closeSidebar() {
    filterSidebar.classList.remove('open');
    filterOverlay.classList.remove('visible');
    document.body.style.overflow = '';
  }
  
  filterClose.addEventListener('click', closeSidebar);
  filterOverlay.addEventListener('click', closeSidebar);
  
  // Gestion du tri - seulement si le select existe
  if (sortSelect) {
    // Préserver les paramètres de requête existants
    const queryParams = {};
    if (location.search.length) {
      const params = location.search.substr(1).split('&');
      for (let i = 0; i < params.length; i++) {
        const keyValue = params[i].split('=');
        if (keyValue.length) {
          queryParams[decodeURIComponent(keyValue[0])] = decodeURIComponent(keyValue[1]);
        }
      }
    }
    
    sortSelect.addEventListener('change', function(e) {
      queryParams.sort_by = e.target.value;
      location.search = new URLSearchParams(queryParams).toString();
    });
  }
  
  // Compter et afficher les filtres actifs
  function updateActiveFiltersCount() {
    const activeFilters = document.querySelectorAll('.active-filter-tag');
    const countElement = document.getElementById('active-filters-count');
    const activeFiltersWrapper = document.getElementById('active-filters');
    
    if (activeFilters.length > 0) {
      countElement.textContent = activeFilters.length;
      countElement.style.display = 'flex';
      activeFiltersWrapper.style.display = 'block';
    } else {
      countElement.style.display = 'none';
      activeFiltersWrapper.style.display = 'none';
    }
  }
  
  // Initialiser le compteur
  updateActiveFiltersCount();
  
  // Fermeture avec Escape
  document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape' && filterSidebar.classList.contains('open')) {
      closeSidebar();
    }
  });
});
</script>

{% schema %}
{
  "name": "Collection",
  "settings": [
    {
      "type": "checkbox",
      "id": "show_sorting",
      "label": "Afficher l'option de tri",
      "default": true,
      "info": "Permet aux clients de trier les produits par prix, date, etc."
    }
  ]
}
{% endschema %}
