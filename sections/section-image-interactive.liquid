<style>
  .bloc-image-technique {
    position: relative;
  }
  
  .button-interactif {
    position: absolute;
    width: 30px;
    height: 30px;
    border-radius: 50%;
    background-color: #f5f2d9;
    opacity: 0.8;
    cursor: pointer;
    z-index: 10;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 12px;
    font-weight: bold;
    color: #6e612b;
  }
  
  .button-interactif:hover {
    opacity: 1;
    transform: scale(1.1);
  }
  
  .button-interactif::after {
    content: '+';
    font-size: 18px;
    line-height: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    transition: all 0.3s ease;
  }
  
  .button-interactif.active::after {
    content: 'âˆ’';
    font-size: 20px;
  }
  
  .image-desktop-file {
    position: relative;
    display: inline-block;
    width: 100%;
  }
  
  .texte-legende {
    position: absolute;
    width: 250px;
    max-width: 300px;
    min-width: 200px;
    padding: 15px;
    border-radius: 15px;
    background-color: #f5f2d9;
    box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    z-index: 20;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
    pointer-events: none;
  }
  
  .texte-legende.active {
    opacity: 1;
    visibility: visible;
    pointer-events: auto;
  }
  
  .heading-style-h3 {
    font-family: Karla, sans-serif;
    color: #6e612b;
    font-size: 1.2rem;
    line-height: 1.2;
    font-weight: 700;
    margin: 0 0 10px 0;
  }
  
  .paragraph {
    font-family: Karla, sans-serif;
    color: #6e612b;
    font-size: 0.9rem;
    line-height: 1.4;
    margin: 0;
  }
  
  .image-10 {
    width: 100%;
    height: auto;
    border-radius: 15px;
    display: block;
  }
  
  .image-desktop {
    display: block;
    padding: 0 20px;
  }
  
  .image-mobile {
    display: none;
    padding: 0 10px;
  }
  
  @media screen and (max-width: 767px) {
    .image-desktop {
      display: none;
    }
    
    .image-mobile {
      display: block;
    }
    
    .button-interactif {
      width: 25px;
      height: 25px;
    }
    
    .texte-legende {
      width: 200px;
      max-width: 250px;
      min-width: 180px;
      padding: 12px;
    }
    
    .heading-style-h3 {
      font-size: 1rem;
    }
    
    .paragraph {
      font-size: 0.8rem;
    }
  }
  
  @media screen and (max-width: 479px) {
    .texte-legende {
      width: 180px;
      max-width: 200px;
      min-width: 160px;
      padding: 10px;
    }
  }
</style>

<div class="bloc-image-technique">
  {% assign desktop_image_block = null %}
  {% assign mobile_image_block = null %}
  
  {% comment %} Trouver les blocs d'images {% endcomment %}
  {% for block in section.blocks %}
    {% if block.type == 'image-desktop' %}
      {% assign desktop_image_block = block %}
    {% elsif block.type == 'image-mobile' %}
      {% assign mobile_image_block = block %}
    {% endif %}
  {% endfor %}
  
  {% comment %} Affichage Desktop {% endcomment %}
  {% if desktop_image_block %}
    <div class="image-desktop">
      <div class="image-desktop-file">
        {% comment %} Boutons Desktop {% endcomment %}
        {% for block in section.blocks %}
          {% if block.type == 'button-desktop' and block.settings.titre != blank %}
            <div class="button-interactif" 
                 data-button-id="desktop-{{ block.id }}"
                 style="left: {{ block.settings.position_x }}%; top: {{ block.settings.position_y }}%;">
            </div>
            <div class="texte-legende" 
                 data-content-id="desktop-{{ block.id }}"
                 data-button-x="{{ block.settings.position_x }}"
                 data-button-y="{{ block.settings.position_y }}">
              <h3 class="heading-style-h3">{{ block.settings.titre }}</h3>
              <p class="paragraph">{{ block.settings.description }}</p>
            </div>
          {% endif %}
        {% endfor %}
        
        {% comment %} Image Desktop {% endcomment %}
        {% if desktop_image_block.settings.image_desktop %}
          {{ desktop_image_block.settings.image_desktop | image_url: width: 1000 | image_tag: class: 'image-10', alt: 'Image interactive desktop', loading: 'lazy' }}
        {% endif %}
      </div>
    </div>
  {% endif %}
  
  {% comment %} Affichage Mobile {% endcomment %}
  {% if mobile_image_block %}
    <div class="image-mobile">
      <div class="image-desktop-file">
        {% comment %} Boutons Mobile {% endcomment %}
        {% for block in section.blocks %}
          {% if block.type == 'button-mobile' and block.settings.titre != blank %}
            <div class="button-interactif" 
                 data-button-id="mobile-{{ block.id }}"
                 style="left: {{ block.settings.position_x }}%; top: {{ block.settings.position_y }}%;">
            </div>
            <div class="texte-legende" 
                 data-content-id="mobile-{{ block.id }}"
                 data-button-x="{{ block.settings.position_x }}"
                 data-button-y="{{ block.settings.position_y }}">
              <h3 class="heading-style-h3">{{ block.settings.titre }}</h3>
              <p class="paragraph">{{ block.settings.description }}</p>
            </div>
          {% endif %}
        {% endfor %}
        
        {% comment %} Image Mobile {% endcomment %}
        {% if mobile_image_block.settings.image_mobile %}
          {{ mobile_image_block.settings.image_mobile | image_url: width: 800 | image_tag: class: 'image-10', alt: 'Image mobile interactive', loading: 'lazy' }}
        {% elsif mobile_image_block.settings.image_desktop %}
          {{ mobile_image_block.settings.image_desktop | image_url: width: 800 | image_tag: class: 'image-10', alt: 'Image interactive', loading: 'lazy' }}
        {% endif %}
      </div>
    </div>
  {% endif %}
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const buttons = document.querySelectorAll('.button-interactif');
  
  buttons.forEach(button => {
    const buttonId = button.getAttribute('data-button-id');
    const contentBox = document.querySelector(`[data-content-id="${buttonId}"]`);
    
    if (contentBox) {
      const buttonX = parseFloat(contentBox.getAttribute('data-button-x'));
      const buttonY = parseFloat(contentBox.getAttribute('data-button-y'));
      
      button.addEventListener('click', function(e) {
        e.preventDefault();
        
        document.querySelectorAll('.texte-legende.active').forEach(box => {
          if (box !== contentBox) {
            box.classList.remove('active');
            const otherButtonId = box.getAttribute('data-content-id');
            const otherButton = document.querySelector(`[data-button-id="${otherButtonId}"]`);
            if (otherButton) {
              otherButton.classList.remove('active');
            }
          }
        });
        
        const isActive = contentBox.classList.contains('active');
        
        if (!isActive) {
          positionContentBox(button, contentBox, buttonX, buttonY);
          contentBox.classList.add('active');
          button.classList.add('active');
        } else {
          contentBox.classList.remove('active');
          button.classList.remove('active');
        }
      });
    }
  });
  
  document.addEventListener('click', function(e) {
    if (!e.target.closest('.button-interactif') && !e.target.closest('.texte-legende')) {
      document.querySelectorAll('.texte-legende.active').forEach(box => {
        box.classList.remove('active');
      });
      document.querySelectorAll('.button-interactif.active').forEach(button => {
        button.classList.remove('active');
      });
    }
  });
  
  function positionContentBox(button, contentBox, buttonX, buttonY) {
    const container = button.closest('.image-desktop-file');
    const containerRect = container.getBoundingClientRect();
    const buttonRect = button.getBoundingClientRect();
    const boxWidth = 250;
    const boxHeight = 120;
    const margin = 15;
    
    let positionClass = '';
    let left, top;
    
    const spaceRight = containerRect.right - buttonRect.right;
    const spaceLeft = buttonRect.left - containerRect.left;
    const spaceTop = buttonRect.top - containerRect.top;
    const spaceBottom = containerRect.bottom - buttonRect.bottom;
    
    contentBox.classList.remove('position-top', 'position-bottom', 'position-left', 'position-right');
    
    if (spaceBottom >= boxHeight + margin) {
      positionClass = 'position-top';
      top = buttonY + 8;
      left = Math.max(5, Math.min(95 - (boxWidth/containerRect.width * 100), buttonX - 12.5));
    } else if (spaceTop >= boxHeight + margin) {
      positionClass = 'position-bottom';
      top = Math.max(5, buttonY - 25);
      left = Math.max(5, Math.min(95 - (boxWidth/containerRect.width * 100), buttonX - 12.5));
    } else if (spaceRight >= boxWidth + margin) {
      positionClass = 'position-left';
      left = Math.min(95 - (boxWidth/containerRect.width * 100), buttonX + 8);
      top = Math.max(5, Math.min(90, buttonY - 10));
    } else if (spaceLeft >= boxWidth + margin) {
      positionClass = 'position-right';
      left = Math.max(5, buttonX - (boxWidth/containerRect.width * 100) - 8);
      top = Math.max(5, Math.min(90, buttonY - 10));
    } else {
      positionClass = 'position-top';
      top = Math.max(5, Math.min(70, buttonY + 8));
      left = Math.max(5, Math.min(70, buttonX - 12.5));
    }
    
    contentBox.classList.add(positionClass);
    contentBox.style.left = left + '%';
    contentBox.style.top = top + '%';
  }
});
</script>

{% schema %}
{
  "tag": "section",
  "name": "Image Interactive",
  "class": "Image-technique",
  "blocks": [
    {
      "name": "Image Desktop",
      "type": "image-desktop",
      "limit": 1,
      "settings": [
        {
          "id": "image_desktop",
          "type": "image_picker",
          "label": "Image Desktop"
        }
      ]
    },
    {
      "name": "Image Mobile",
      "type": "image-mobile",
      "limit": 1,
      "settings": [
        {
          "id": "image_mobile",
          "type": "image_picker",
          "label": "Image Mobile (optionnelle)"
        },
        {
          "id": "image_desktop",
          "type": "image_picker",
          "label": "Image de fallback"
        }
      ]
    },
    {
      "name": "Bouton Desktop",
      "type": "button-desktop",
      "settings": [
        {
          "id": "position_x",
          "type": "range",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "%",
          "label": "Position X",
          "default": 50
        },
        {
          "id": "position_y",
          "type": "range",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "%",
          "label": "Position Y",
          "default": 30
        },
        {
          "id": "titre",
          "type": "text",
          "label": "Titre",
          "default": "CaractÃ©ristique"
        },
        {
          "id": "description",
          "type": "textarea",
          "label": "Description",
          "default": "Description de cette caractÃ©ristique"
        }
      ]
    },
    {
      "name": "Bouton Mobile",
      "type": "button-mobile",
      "settings": [
        {
          "id": "position_x",
          "type": "range",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "%",
          "label": "Position X",
          "default": 50
        },
        {
          "id": "position_y",
          "type": "range",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "%",
          "label": "Position Y",
          "default": 30
        },
        {
          "id": "titre",
          "type": "text",
          "label": "Titre",
          "default": "CaractÃ©ristique"
        },
        {
          "id": "description",
          "type": "textarea",
          "label": "Description",
          "default": "Description de cette caractÃ©ristique"
        }
      ]
    },
    {
      "type": "@app"
    }
  ],
  "presets": [
    {
      "name": "Image Interactive",
      "category": "Liquify",
      "blocks": [
        {
          "type": "image-desktop"
        },
        {
          "type": "image-mobile"
        },
        {
          "type": "button-desktop"
        }
      ]
    }
  ]
}
{% endschema %}
